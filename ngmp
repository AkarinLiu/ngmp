#!/bin/bash
clear
echo "Welecome to NGMP!"
echo "Select Nginx Version:"
echo "1. 1.25.4"
echo "2. 1.24.0"
echo "3. 1.22.1"
echo "4. 1.20.2"
echo "5. 1.18.0"
read -p "Enter your choice: " nginx_choice
if [ $nginx_choice -eq 1 ]; then
    nginx_version="1.25.4"
elif [ $nginx_choice -eq 2 ]; then
    nginx_version="1.24.0"
elif [ $nginx_choice -eq 3 ]; then
    nginx_version="1.22.1"
elif [ $nginx_choice -eq 4 ]; then
    nginx_version="1.20.2"
elif [ $nginx_choice -eq 5 ]; then
    nginx_version="1.18.0"
else
    echo "Invalid choice"
    exit 1
fi
echo "Select PHP Version:"
echo "1. 8.3"
echo "2. 8.2"
echo "3. 8.1"
echo "4. 8.0"
echo "5. 7.4"
read -p "Enter your choice: " php_choice
if [ $php_choice -eq 1 ]; then
    php_version="8.3"
elif [ $php_choice -eq 2 ]; then
    php_version="8.2"
elif [ $php_choice -eq 3 ]; then
    php_version="8.1"
elif [ $php_choice -eq 4 ]; then
    php_version="8.0"
elif [ $php_choice -eq 5 ]; then
    php_version="7.4"
else
    echo "Invalid choice"
    exit 1
fi
echo "Select MariaDB Version:"
echo "1. 11.4.1"
echo "2. 10.11.7"
echo "3. 10.6.17"
echo "4. 10.5.24"
echo "5. 10.4.33"
read -p "Enter your choice: " mariadb_choice
if [ $mariadb_choice -eq 1 ]; then
    mariadb_version="11.4.1"
elif [ $mariadb_choice -eq 2 ]; then
    mariadb_version="10.11.7"
elif [ $mariadb_choice -eq 3 ]; then
    mariadb_version="10.6.17"
elif [ $mariadb_choice -eq 4 ]; then
    mariadb_version="10.5.24"
elif [ $mariadb_choice -eq 5 ]; then
    mariadb_version="10.4.33"
else
    echo "Invalid choice"
    exit 1
fi
echo "MariaDB Using binary install? [Y/n]"
read -p "Enter your choice: " mariadb_binary_choice
if [ $mariadb_binary_choice == "Y" -o $mariadb_binary_choice == "y" ]; then
    mariadb_binary="true"
else
    mariadb_binary="false"
fi
echo "Enable Nginx Lua Support? [Y/n]"
read -p "Enter your choice: " nginx_lua_choice
if [ $nginx_lua_choice == "Y" -o $nginx_lua_choice == "y" ]; then
    nginx_lua="true"
else
    nginx_lua="false"
fi
start=$(date +%s)
echo "Installing Nginx, PHP, and MariaDB..."
echo "Nginx Version: $nginx_version"
echo "PHP Version: $php_version"
echo "MariaDB Version: $mariadb_version"
# Install Dependency
if [ -f /usr/bin/apt ];
then
    apt update
    apt install -y build-essential libpcre3 libpcre3-dev zlib1g-dev libssl-dev git libxml2-dev autoconf bison re2c pkg-config libsqlite3-dev libcurl4-openssl-dev libonig-dev libboost-dev libreadline-dev  gcc g++ cmake zlib1g-dev libaio-dev luajit
elif [ -f /usr/bin/yum ]
then
    yum update -y
    yum groupinstall "Development Tools"
    yum install -y gcc make boost-devel  pcre-devel zlib-devel openssl-devel git libxml2-devel autoconf bison re2c pkg-config libsqlite3-devel libcurl-devel oniguruma-devel luajit
else
    echo "Unsupported OS"
    exit 1
fi
# Download Nginx
echo "Downloading Nginx $nginx_version"
wget https://nginx.org/download/nginx-$nginx_version.tar.gz
tar -xvf nginx-$nginx_version.tar.gz
# Download Nginx Lua Modules
if [ $nginx_lua == "true" ]; then
    
    echo "Downloading Nginx Lua Modules"
    cd nginx-$nginx_version
    git clone https://gitee.com/mirrors/ngx_devel_kit.git
    git clone https://gitee.com/mirrors/lua-nginx-module.git
    cd ..
fi
# Download PHP and MariaDB
echo "Downloading PHP $php_version"
git clone https://gitee.com/mirrors/php.git -b PHP-$php_version
echo "Downloading MariaDB $mariadb_version"
if [ "$mariadb_binary" == "true" ]; then
    wget https://mirrors.aliyun.com/mariadb/mariadb-$mariadb_version/bintar-linux-systemd-x86_64/mariadb-$mariadb_version-linux-systemd-x86_64.tar.gz
    tar -xvf mariadb-$mariadb_version-linux-systemd-x86_64.tar.gz
else
    wget https://mirrors.aliyun.com/mariadb/mariadb-$mariadb_version/source/mariadb-$mariadb_version.tar.gz
    tar -xvf mariadb-$mariadb_version.tar.gz
fi

# Build Nginx
cd nginx-$nginx_version
if [ $nginx_lua == "true" ]; then
    ./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-zlib --with-openssl=../openssl-1.1.1k --with-openssl-opt='enable-tls1_3' --user=www-data --group=www-data --with-ld-opt="-Wl,-rpath,/usr/local/php/lib/" --add-module=./ngx_devel_kit --add-module=./lua-nginx-module
else
    ./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-zlib --with-openssl=../openssl-1.1.1k --with-openssl-opt='enable-tls1_3' --user=www-data --group=www-data --with-ld-opt="-Wl,-rpath,/usr/local/php/lib/"
fi
make && make install
# Build PHP
cd ../php
./buildconf
./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --with-openssl --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --enable-mbstring --with-mysqli --with-pdo-mysql --with-mysql-sock=/var/run/mysqld/mysqld.sock --with-zlib --with-curl --enable-zip --enable-soap --enable-bcmath --enable-sockets --enable-pcntl --enable-mysqlnd --with-mysqli-sock=/var/ --with-pkg-config-path=/usr/bin/pkg-config
make && make install
# Build MariaDB
if [ "$mariadb_binary" == "true" ]; then
    mv /mariadb-$mariadb_version-linux-systemd-x86_64 /usr/local/mariadb
    chown -R mysql:mysql /usr/local/mariadb
    chmod -R 755 /usr/local/mariadb
    /usr/local/mariadb/scripts/mysql_install_db --user=mysql --basedir=/usr/local/mariadb --datadir=/usr/local/mariadb/data
else
    cd ../mariadb-$mariadb_version
    cmake . \
    -DCMAKE_INSTALL_PREFIX=/usr/local/mariadb \
    -DMYSQL_DATADIR=/usr/local/mariadb/data \
    -DSYSCONFDIR=/etc/mariadb \
    -DWITH_INNOBASE_STORAGE_ENGINE=1 \
    -DWITH_READLINE=1 \
    -DWITH_SSL=system \
    -DWITH_ZLIB=system \
    -DWITH_LIBWRAP=0 \
    -DMYSQL_UNIX_ADDR=/var/run/mariadb/mariadb.sock \
    -DDEFAULT_CHARSET=utf8mb4 \
    -DDEFAULT_COLLATION=utf8mb4_general_ci
    make && make install
    sudo /usr/local/mariadb/scripts/mysql_install_db --user=mysql --basedir=/usr/local/mariadb --datadir=/usr/local/mariadb/data
    sudo cp /usr/local/mariadb/support-files/my-huge.cnf /etc/my.cnf
    sudo /usr/local/mariadb/bin/mysqld_safe --user=mysql &
fi
# Add PATH
ln -sf /usr/local/nginx/sbin/nginx /usr/local/sbin/nginx
ln -sf /usr/local/php/sbin/php /usr/local/bin/php
ln -sf /usr/local/php/sbin/php-fpm /usr/local/bin/php-fpm
ln -sf /usr/local/mariadb/bin/mysql /usr/local/bin/mysql
ln -sf /usr/local/mariadb/bin/mysqld /usr/local/bin/mysqld
ln -sf /usr/local/mariadb/bin/mysqldump /usr/local/bin/mysqldump
ln -sf /usr/local/mariadb/bin/mysqlimport /usr/local/bin/mysqlimport
ln -sf /usr/local/mariadb/bin/mysqlshow /usr/local/bin/mysqlshow
ln -sf /usr/local/mariadb/bin/mysqlcheck /usr/local/bin/mysqlcheck
ln -sf /usr/local/mariadb/bin/mysqlslap /usr/local/bin/mysqlslap
# Install Service
wget -O /etc/systemd/system/nginx.service https://raw.githubusercontent.com/AkarinLiu/ngmp/master/nginx.service
wget -O /etc/systemd/system/php-fpm.service https://raw.githubusercontent.com/AkarinLiu/ngmp/master/php-fpm.service
wget -O /etc/systemd/system/mariadb.service https://raw.githubusercontent.com/AkarinLiu/ngmp/master/mariadb.service
systemctl daemon-reload
systemctl enable --now  nginx.service
systemctl enable --now  php-fpm.service
systemctl enable --now  mariadb.service
end=$(date +%s)
duration=$((end - start))
hours=$((duration / 3600))
minutes=$(((duration % 3600) / 60 ))
seconds=$((duration % 60))
echo "Install finished in $hours hours $minutes minutes $seconds seconds"