#!/bin/bash
set -e

export NGMP_PWD=$(pwd)
clear
echo "Welcome to NGMP!"
echo "This script will help you install Nginx, MariaDB and PHP on your system."

# Function to read user choice
read_choice() {
    local prompt=$1
    local choices=("${@:2}")
    local valid_choices=()
    
    for i in "${!choices[@]}"; do
        echo "$((i+1)). ${choices[i]}"
        valid_choices+=("$((i+1))")
    done
    
    read -p "$prompt" choice
    if [[ ! " ${valid_choices[*]} " =~ " $choice " ]]; then
        echo "Invalid choice"
        exit 1
    fi
    echo "$choice"
}

# HTTP Server Selection
http_choice=$(read_choice "Select HTTP Server Type:" "Nginx" "OpenResty")
if [ "$http_choice" == "1" ]; then
    http_server="nginx"
    nginx_versions=("Latest Stable (1.25.3)" "Previous Stable (1.24.0)")
    nginx_choice=$(read_choice "Select Nginx Version:" "${nginx_versions[@]}")
    nginx_version=${nginx_versions[$((nginx_choice-1))##* }
elif [ "$http_choice" == "2" ]; then
    http_server="openresty"
    openresty_version="1.25.3.1"
fi

# PHP Version Selection
php_versions=("none" "8.4" "8.3" "8.2" "8.1" "8.0" "7.4")
php_choice=$(read_choice "Select PHP Version:" "${php_versions[@]}")
php_version=${php_versions[$((php_choice-1))]}

# MariaDB Version Selection
mariadb_versions=("None" "11.8.0" "11.7.1" "11.6.2" "11.4.4" "10.11.0")
mariadb_choice=$(read_choice "Select MariaDB Version:" "${mariadb_versions[@]}")
mariadb_version=${mariadb_versions[$((mariadb_choice-1))]}

if [ "$mariadb_version" != "None" ]; then
    mariadb_mirrors=("TUNA" "USTC" "Aliyun")
    mariadb_mirror_choice=$(read_choice "Select MariaDB Mirror:" "${mariadb_mirrors[@]}")
    case $mariadb_mirror_choice in
        1) mariadb_mirror="https://mirrors.tuna.tsinghua.edu.cn/mariadb" ;;
        2) mariadb_mirror="https://mirrors.ustc.edu.cn/mariadb" ;;
        3) mariadb_mirror="https://mirrors.aliyun.com/mariadb" ;;
    esac
fi

echo "HTTP Server: ${http_server:-none}"
echo "Nginx Version: ${nginx_version:-none}"
echo "PHP Version: $php_version"
echo "MariaDB Version: $mariadb_version"

read -p "Do you want to proceed? (yes/no): " confirm
if [ "$confirm" != "yes" ]; then
    echo "Exiting..."
    exit 1
fi

# Install dependencies and build functions
install_dependencies() {
    if [ -f /usr/bin/apt ]; then
        apt update && apt install -y "$@"
    elif [ -f /usr/bin/dnf ]; then
        dnf update && dnf install -y "$@"
    elif [ -f /usr/bin/yum ]; then
        yum update && yum install -y "$@"
    else
        echo "Unsupported package manager"
        exit 1
    fi
}

build_nginx() {
    cd "$NGMP_PWD/data"
    wget --no-clobber "https://nginx.org/download/nginx-$nginx_version.tar.gz"
    tar -xvf "nginx-$nginx_version.tar.gz"
    cd "nginx-$nginx_version"
    ./configure \
        --prefix=/usr/local/ngmp/nginx \
        --user=www-data \
        --group=www-data \
        --with-http_ssl_module \
        --with-http_v2_module \
        --with-http_v3_module \
        --with-http_realip_module \
        --with-http_gzip_static_module \
        --with-http_stub_status_module \
        --with-file-aio \
        --with-threads \
        --with-compat
    make -j4 && make install
    ln -sf /usr/local/ngmp/nginx/sbin/nginx /usr/local/sbin/nginx
    cp "$NGMP_PWD/nginx.service" /etc/systemd/system
}

build_openresty() {
    cd "$NGMP_PWD/data"
    wget --no-clobber "https://openresty.org/download/openresty-$openresty_version.tar.gz"
    tar -xf "openresty-$openresty_version.tar.gz"
    cd "openresty-$openresty_version"
    ./configure \
        --prefix=/usr/local/ngmp/openresty \
        --user=www-data \
        --group=www-data \
        --with-http_ssl_module \
        --with-http_v2_module \
        --with-http_v3_module \
        --with-http_realip_module \
        --with-http_gzip_static_module \
        --with-http_stub_status_module \
        --with-file-aio \
        --with-threads \
        --with-compat \
        --with-luajit
    make -j4 && make install
    ln -sf /usr/local/ngmp/openresty/nginx/sbin/nginx /usr/local/sbin/nginx
    cp "$NGMP_PWD/openresty.service" /etc/systemd/system
}

build_php() {
    cd "$NGMP_PWD/data"
    git clone "https://gitee.com/mirrors/php.git" -b "PHP-$php_version" "php-$php_version"
    cd "php-$php_version"
    ./buildconf
    ./configure --prefix=/usr/local/ngmp/php \
        --with-config-file-path=/usr/local/ngmp/php/etc \
        --enable-fpm \
        --with-fpm-user=www-data \
        --with-fpm-group=www-data \
        --enable-mbstring \
        --enable-zip \
        --enable-gd \
        --with-jpeg-dir \
        --with-png-dir \
        --with-freetype-dir \
        --enable-mysqlnd \
        --with-mysqli=mysqlnd \
        --with-pdo-mysql=mysqlnd \
        --with-sqlite \
        --with-xml \
        --with-iconv-dir \
        --with-xmlrpc \
        --enable-soap \
        --with-gettext \
        --with-curl \
        --enable-json \
        --enable-openssl \
        --enable-ftp \
        --with-zlib \
        --enable-gd-native-ttf \
        --with-mhash \
        --enable-pcntl \
        --enable-bcmath \
        --with-zlib \
        --enable-sockets \
        --enable-sysvmsg \
        --enable-sysvsem \
        --enable-sysvshm \
        --enable-mbregex \
        --with-openssl \
        --with-openssl-dir \
        --with-openssl-opt="enable-tls1_3" \
        --with-openssl-opt="enable-tls1_2" \
        --enable-opcache
    make -j4 && make install
    cp /usr/local/ngmp/php/etc/php.ini-production /usr/local/ngmp/php/etc/php.ini 
    cp /usr/local/ngmp/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf
    ln -sf /usr/local/ngmp/php/bin/php /usr/local/bin/php
    ln -sf /usr/local/ngmp/php/sbin/php-fpm /usr/local/sbin/php-fpm
    cp "$NGMP_PWD/php-fpm.service" /etc/systemd/system
}

build_mariadb() {
    cd "$NGMP_PWD"
    wget --no-clobber "$mariadb_mirror/mariadb-$mariadb_version/source/mariadb-$mariadb_version.tar.gz"
    tar -xf "mariadb-$mariadb_version.tar.gz"
    cd "mariadb-$mariadb_version"
    rm -f CMakeCache.txt
    mkdir /var/local/lib/mysql
    cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/ngmp/mysql -DMYSQL_DATADIR=/var/local/lib/mysql -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8mb4 -DDEFAULT_COLLATION=utf8mb4_unicode_ci -DWITH_INNOBASE_STORAGE_ENGINE=1
    make -j4 && make install
    useradd -s /sbin/nologin mysql
    chown -R mysql:mysql .
    ln -sf /usr/local/ngmp/mysql/bin/* /usr/local/bin
    cp "$NGMP_PWD/mariadb.service" /etc/systemd/system
}

# Main installation logic
if [ "$http_server" == "nginx" ]; then
    install_dependencies build-essential zlib1g-dev libpcre3-dev libssl-dev
    build_nginx
elif [ "$http_server" == "openresty" ]; then
    install_dependencies build-essential zlib1g-dev libpcre3-dev libssl-dev
    build_openresty
fi

if [ "$php_version" != "none" ]; then
    install_dependencies build-essential autoconf automake libtool \
        libxml2-dev zlib1g-dev libpng-dev libjpeg-dev libfreetype6-dev \
        libmcrypt-dev libmhash-dev libbz2-dev libcurl4-gnutls-dev \
        libonig-dev libzip-dev libsqlite3-dev libmysqlclient-dev \
        libxslt1-dev libiconv-dev libxmlrpc-c-dev libxpm-dev \
        libreadline-dev libssl-dev libpcntl-dev libsysvmsg-dev libsysvsem-dev \
        libsysvshm-dev libmbfl-dev libicu-dev
    build_php
fi

if [ "$mariadb_version" != "None" ]; then
    build_mariadb
fi

# End
echo "Cleaning Temp Files..."
rm -rf "$NGMP_PWD/data"/*
echo "Install Complete"
echo "Please run mysql_secure_installation to configure your MariaDB installation."