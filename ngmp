#!/bin/bash
clear
echo "Welecome to NGMP!"
echo "Select Nginx Version:"
echo "1. 1.25.4"
echo "2. 1.24.0"
echo "3. 1.22.1"
echo "4. 1.20.2"
echo "5. 1.18.0"
read -p "Enter your choice: " nginx_choice
if [ $nginx_choice -eq 1 ]; then
    nginx_version="1.25.4"
elif [ $nginx_choice -eq 2 ]; then
    nginx_version="1.24.0"
elif [ $nginx_choice -eq 3 ]; then
    nginx_version="1.22.1"
elif [ $nginx_choice -eq 4 ]; then
    nginx_version="1.20.2"
elif [ $nginx_choice -eq 5 ]; then
    nginx_version="1.18.0"
else
    echo "Invalid choice"
    exit 1
fi
echo "Select PHP Version:"
echo "1. 8.3"
echo "2. 8.2"
echo "3. 8.1"
echo "4. 8.0"
echo "5. 7.4"
read -p "Enter your choice: " php_choice
if [ $php_choice -eq 1 ]; then
    php_version="8.3"
elif [ $php_choice -eq 2 ]; then
    php_version="8.2"
elif [ $php_choice -eq 3 ]; then
    php_version="8.1"
elif [ $php_choice -eq 4 ]; then
    php_version="8.0"
elif [ $php_choice -eq 5 ]; then
    php_version="7.4"
else
    echo "Invalid choice"
    exit 1
fi
echo "Select MariaDB Version:"
echo "1. 11.4.1"
echo "2. 10.11.7"
echo "3. 10.6.17"
echo "4. 10.5.24"
echo "5. 10.4.33"
read -p "Enter your choice: " mariadb_choice
if [ $mariadb_choice -eq 1 ]; then
    mariadb_version="11.4.1"
elif [ $mariadb_choice -eq 2 ]; then
    mariadb_version="10.11.7"
elif [ $mariadb_choice -eq 3 ]; then
    mariadb_version="10.6.17"
elif [ $mariadb_choice -eq 4 ]; then
    mariadb_version="10.5.24"
elif [ $mariadb_choice -eq 5 ]; then
    mariadb_version="10.4.33"
else
    echo "Invalid choice"
    exit 1
fi
echo "Select MariaDB Mirror:"
echo "1. TUNA"
echo "2. USTC"
echo "3. Aliyun"
read -p "Enter your choice: " mariadb_mirror_choice
if [ $mariadb_mirror_choice -eq 1 ]; then
    mariadb_mirror="https://mirrors.tuna.tsinghua.edu.cn/mariadb"
elif [ $mariadb_mirror_choice -eq 2 ]; then
    mariadb_mirror="https://mirrors.ustc.edu.cn/mariadb"
elif [ $mariadb_mirror_choice -eq 3 ]; then
    mariadb_mirror="https://mirrors.aliyun.com/mariadb"
else
    echo "Invalid choice"
    exit 1
fi
echo "Using Multi-Jobs Compile?"
echo "1. No"
echo "2. 2 Jobs"
echo "3. 4 Jobs"
echo "4. 6 Jobs"
echo "5. 8 Jobs"
read -p "Enter your choice: " jobs_choice
if [ $jobs_choice -eq 1 ]; then
    jobs="1"
elif [ $jobs_choice -eq 2 ]; then
    jobs="2"
elif [ $jobs_choice -eq 3 ]; then
    jobs="4"
elif [ $jobs_choice -eq 4 ]; then
    jobs="6"
elif [ $jobs_choice -eq 5 ]; then
    jobs="8"
else
    echo "Invalid choice"
    exit 1
fi
echo "Installing Nginx, PHP, and MariaDB..."
echo "Nginx Version: $nginx_version"
echo "PHP Version: $php_version"
echo "MariaDB Version: $mariadb_version"
mkdir $HOME/ngmp-data
cd $HOME/ngmp-data
# Install Dependency
if [ -f /usr/bin/apt ];
then
    apt update
    apt install -y build-essential libpcre3 lua5.4 libpcre3-dev zlib1g-dev libssl-dev git libxml2-dev autoconf bison re2c pkg-config libsqlite3-dev libcurl4-openssl-dev libonig-dev libboost-dev libreadline-dev  gcc g++ cmake zlib1g-dev libaio-dev curl libpng-dev
elif [ -f /usr/bin/yum ];
then
    yum update -y
    yum groupinstall "Development Tools"
    yum install -y gcc make boost-devel lua-devel pcre-devel zlib-devel openssl-devel git libxml2-devel autoconf bison re2c pkg-config libsqlite3-devel libcurl-devel oniguruma-devel curl libpng-devel
else
    echo "Unsupported OS"
    exit 1
fi
# Download Nginx
echo "Downloading Nginx $nginx_version"
wget --no-clobber https://nginx.org/download/nginx-$nginx_version.tar.gz
tar -xvf nginx-$nginx_version.tar.gz
# Download PHP and MariaDB
echo "Downloading PHP $php_version"
git clone https://gitee.com/mirrors/php.git -b PHP-$php_version
echo "Downloading MariaDB $mariadb_version"
wget --no-clobber $mariadb_mirror/mariadb-$mariadb_version/source/mariadb-$mariadb_version.tar.gz
tar -xvf mariadb-$mariadb_version.tar.gz
# Build Nginx
cd nginx-$nginx_version
./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_v2_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre  --with-openssl-opt="include=/usr/include/openssl" --with-openssl-opt="lib=/usr/lib" --with-openssl-opt='enable-tls1_3' --with-openssl-opt='enable-tls1_2' --user=www-data --group=www-data --with-ld-opt="-Wl,-rpath,/usr/local/php/lib/" --pid-path=/var/run/nginx.pid --with-cc-opt="-O0"
if [ $jobs == "1" ]; then
    make && make install
elif [ $jobs == "2" ]; then
    make -j2 && make install
elif [ $jobs == "4" ]; then
    make -j4 && make install
elif [ $jobs == "6" ]; then
    make -j6 && make install
elif [ $jobs == "8" ]; then
    make -j8 && make install
fi
# Build PHP
cd ../php
./buildconf
./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --enable-mbstring --enable-zip --enable-gd --with-jpeg-dir --with-png-dir --with-freetype-dir --enable-mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-sqlite --with-pgsql --with-xml  --with-iconv-dir --with-xmlrpc --enable-soap --with-gettext --with-curl --enable-json --enable-openssl --enable-ftp --with-zlib --enable-gd-native-ttf --with-mhash --enable-pcntl --enable-bcmath --with-zlib --enable-sockets --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-mbress --with-openssl --with-openssl-dir --with-openssl-opt="enable-tls1_3"
if [ $jobs == "1" ]; then
    make && make install
elif [ $jobs == "2" ]; then
    make -j2 && make install
elif [ $jobs == "4" ]; then
    make -j4 && make install
elif [ $jobs == "6" ]; then
    make -j6 && make install
elif [ $jobs == "8" ]; then
    make -j8 && make install
fi
# Build MariaDB
cd ../mariadb-$mariadb_version
cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mariadb \ -DMYSQL_DATADIR=/usr/local/mariadb/data \ -DSYSCONFDIR=/etc \ -DWITH_INNOBASE_STORAGE_ENGINE=1 \ -DWITH_READLINE=1 \ -DWITH_SSL=system \ -DWITH_ZLIB=system \ -DWITH_LIBWRAP=0 \ -DMYSQL_UNIX_ADDR=/var/run/mariadb/mariadb.sock \ -DDEFAULT_CHARSET=utf8mb4 \ -DDEFAULT_COLLATION=utf8mb4_general_ci
if [ $jobs == "1" ]; then
    make && make install
elif [ $jobs == "2" ]; then
    make -j2 && make install
elif [ $jobs == "4" ]; then
    make -j4 && make install
elif [ $jobs == "6" ]; then
    make -j6 && make install
elif [ $jobs == "8" ]; then
    make -j8 && make install
fi
sudo /usr/local/mariadb/scripts/mysql_install_db --user=mysql --basedir=/usr/local/mariadb --datadir=/usr/local/mariadb/data
sudo cp /usr/local/mariadb/support-files/my-huge.cnf /etc/my.cnf
sudo /usr/local/mariadb/bin/mysqld_safe --user=mysql &
groupadd -u 162 mysql
useradd -u 162 -s /sbin/nologin mysql
# Add PATH
ln -sf /usr/local/nginx/sbin/nginx /usr/local/sbin/nginx
ln -sf /usr/local/php/bin/php /usr/local/bin/php
ln -sf /usr/local/php/sbin/php-fpm /usr/local/sbin/php-fpm
ln -sf /usr/local/mariadb/bin/mysql /usr/local/bin/mysql
ln -sf /usr/local/mariadb/bin/mysqladmin /usr/local/bin/mysqladmin
ln -sf /usr/local/mariadb/bin/mysqldump /usr/local/bin/mysqldump
ln -sf /usr/local/mariadb/bin/mysqlimport /usr/local/bin/mysqlimport
ln -sf /usr/local/mariadb/bin/mysqlcheck /usr/local/bin/mysqlcheck
ln -sf /usr/local/mariadb/bin/mysql_secure_installation /usr/local/bin/mysql_secure_installation
ln -sf /usr/local/mariadb/bin/mariadb /usr/local/bin/mariadb
ln -sf /usr/local/mariadb/bin/mariadbd /usr/local/bin/mariadbd
ln -sf /usr/local/mariadb/bin/mariadbimport /usr/local/bin/mariadbimport
ln -sf /usr/local/mariadb/bin/mariadbadmin /usr/local/bin/mariadbadmin
ln -sf /usr/local/mariadb/bin/mariadbdump /usr/local/bin/mariadbdump
ln -sf /usr/local/mariadb/bin/mariadb-secure-installation /usr/local/bin/mariadb-secure-installation
# Install Service
wget -U --force-update -O /etc/systemd/system/nginx.service https://mirror.ghproxy.com/https://raw.githubusercontent.com/AkarinLiu/ngmp/master/nginx.service
wget -U --force-update -O /etc/systemd/system/php-fpm.service https://mirror.ghproxy.com/https://raw.githubusercontent.com/AkarinLiu/ngmp/master/php-fpm.service
wget -U --force-update -O /etc/systemd/system/mariadb.service https://mirror.ghproxy.com/https://raw.githubusercontent.com/AkarinLiu/ngmp/master/mariadb.service
systemctl daemon-reload
systemctl enable --now  nginx.service
systemctl enable --now  php-fpm.service
systemctl enable --now  mariadb.service
# Install Composer
curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer
# End
echo "Install Complete"
echo "Please run mysql_secure_installation to configure your MariaDB installation."
cd 